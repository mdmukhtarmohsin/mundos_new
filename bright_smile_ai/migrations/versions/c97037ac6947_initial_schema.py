"""Initial schema

Revision ID: c97037ac6947
Revises: 
Create Date: 2025-08-11 18:17:50.145002

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c97037ac6947'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('leads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('initial_inquiry', sa.Text(), nullable=True, comment='The very first thing the lead asked'),
    sa.Column('status', postgresql.ENUM('NEW', 'ACTIVE', 'AT_RISK', 'COLD', 'CONTACTED', 'HUMAN_HANDOFF', 'CONVERTED', 'DO_NOT_CONTACT', name='lead_status'), nullable=False),
    sa.Column('risk_level', postgresql.ENUM('LOW', 'MEDIUM', 'HIGH', name='lead_risk_level'), nullable=False),
    sa.Column('sentiment_score', sa.Float(), nullable=True, comment='Rolling conversation mood score'),
    sa.Column('reason_for_cold', sa.Text(), nullable=True, comment='Manual tag for why lead was lost'),
    sa.Column('do_not_contact', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_contact_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_leads_do_not_contact'), 'leads', ['do_not_contact'], unique=False)
    op.create_index(op.f('ix_leads_email'), 'leads', ['email'], unique=True)
    op.create_index(op.f('ix_leads_id'), 'leads', ['id'], unique=False)
    op.create_index(op.f('ix_leads_last_contact_at'), 'leads', ['last_contact_at'], unique=False)
    op.create_index(op.f('ix_leads_name'), 'leads', ['name'], unique=False)
    op.create_index(op.f('ix_leads_phone'), 'leads', ['phone'], unique=True)
    op.create_index(op.f('ix_leads_status'), 'leads', ['status'], unique=False)
    op.create_table('offers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('offer_title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('valid_for_service', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('discount_percentage', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_offers_id'), 'offers', ['id'], unique=False)
    op.create_index(op.f('ix_offers_is_active'), 'offers', ['is_active'], unique=False)
    op.create_index(op.f('ix_offers_valid_for_service'), 'offers', ['valid_for_service'], unique=False)
    op.create_table('testimonials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_category', sa.String(length=100), nullable=False),
    sa.Column('snippet_text', sa.Text(), nullable=False),
    sa.Column('patient_name', sa.String(length=255), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True, comment='1-5 star rating'),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_testimonials_id'), 'testimonials', ['id'], unique=False)
    op.create_index(op.f('ix_testimonials_service_category'), 'testimonials', ['service_category'], unique=False)
    op.create_table('ai_interactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lead_id', sa.Integer(), nullable=False),
    sa.Column('interaction_type', sa.String(length=50), nullable=False),
    sa.Column('model_used', sa.String(length=100), nullable=True),
    sa.Column('prompt_tokens', sa.Integer(), nullable=True),
    sa.Column('completion_tokens', sa.Integer(), nullable=True),
    sa.Column('total_cost', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['lead_id'], ['leads.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_interactions_id'), 'ai_interactions', ['id'], unique=False)
    op.create_index(op.f('ix_ai_interactions_interaction_type'), 'ai_interactions', ['interaction_type'], unique=False)
    op.create_index(op.f('ix_ai_interactions_lead_id'), 'ai_interactions', ['lead_id'], unique=False)
    op.create_index(op.f('ix_ai_interactions_success'), 'ai_interactions', ['success'], unique=False)
    op.create_table('financial_explainers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lead_id', sa.Integer(), nullable=False),
    sa.Column('secure_url_token', sa.String(length=255), nullable=False),
    sa.Column('is_accessed', sa.Boolean(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=True),
    sa.Column('first_accessed_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('last_accessed_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('procedure_name', sa.Text(), nullable=False),
    sa.Column('total_cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('estimated_insurance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('out_of_pocket_cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_options', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Payment plan options as JSON'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['lead_id'], ['leads.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_financial_explainers_id'), 'financial_explainers', ['id'], unique=False)
    op.create_index(op.f('ix_financial_explainers_is_accessed'), 'financial_explainers', ['is_accessed'], unique=False)
    op.create_index(op.f('ix_financial_explainers_lead_id'), 'financial_explainers', ['lead_id'], unique=False)
    op.create_index(op.f('ix_financial_explainers_secure_url_token'), 'financial_explainers', ['secure_url_token'], unique=True)
    op.create_table('lead_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lead_id', sa.Integer(), nullable=False),
    sa.Column('engagement_score', sa.Float(), nullable=True, comment='Based on response frequency and sentiment'),
    sa.Column('intent_score', sa.Float(), nullable=True, comment='Likelihood to convert based on conversations'),
    sa.Column('urgency_score', sa.Float(), nullable=True, comment='How quickly they need treatment'),
    sa.Column('budget_score', sa.Float(), nullable=True, comment='Ability to afford treatment'),
    sa.Column('total_score', sa.Float(), nullable=True),
    sa.Column('score_updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['lead_id'], ['leads.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lead_scores_id'), 'lead_scores', ['id'], unique=False)
    op.create_index(op.f('ix_lead_scores_lead_id'), 'lead_scores', ['lead_id'], unique=False)
    op.create_index(op.f('ix_lead_scores_total_score'), 'lead_scores', ['total_score'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lead_id', sa.Integer(), nullable=False),
    sa.Column('sender', postgresql.ENUM('LEAD', 'AI', 'HUMAN', name='sender_type'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('intent_classification', sa.String(length=100), nullable=True, comment='Classified intent for AI messages'),
    sa.Column('confidence_score', sa.Float(), nullable=True, comment='AI confidence in response'),
    sa.ForeignKeyConstraint(['lead_id'], ['leads.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messages_created_at'), 'messages', ['created_at'], unique=False)
    op.create_index(op.f('ix_messages_id'), 'messages', ['id'], unique=False)
    op.create_index(op.f('ix_messages_lead_id'), 'messages', ['lead_id'], unique=False)
    op.create_index(op.f('ix_messages_sender'), 'messages', ['sender'], unique=False)
    op.create_table('system_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lead_id', sa.Integer(), nullable=True),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['lead_id'], ['leads.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_events_created_at'), 'system_events', ['created_at'], unique=False)
    op.create_index(op.f('ix_system_events_event_type'), 'system_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_system_events_id'), 'system_events', ['id'], unique=False)
    op.create_index(op.f('ix_system_events_lead_id'), 'system_events', ['lead_id'], unique=False)
    op.create_index(op.f('ix_system_events_processed'), 'system_events', ['processed'], unique=False)
    op.create_index(op.f('ix_system_events_severity'), 'system_events', ['severity'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_system_events_severity'), table_name='system_events')
    op.drop_index(op.f('ix_system_events_processed'), table_name='system_events')
    op.drop_index(op.f('ix_system_events_lead_id'), table_name='system_events')
    op.drop_index(op.f('ix_system_events_id'), table_name='system_events')
    op.drop_index(op.f('ix_system_events_event_type'), table_name='system_events')
    op.drop_index(op.f('ix_system_events_created_at'), table_name='system_events')
    op.drop_table('system_events')
    op.drop_index(op.f('ix_messages_sender'), table_name='messages')
    op.drop_index(op.f('ix_messages_lead_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_created_at'), table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_lead_scores_total_score'), table_name='lead_scores')
    op.drop_index(op.f('ix_lead_scores_lead_id'), table_name='lead_scores')
    op.drop_index(op.f('ix_lead_scores_id'), table_name='lead_scores')
    op.drop_table('lead_scores')
    op.drop_index(op.f('ix_financial_explainers_secure_url_token'), table_name='financial_explainers')
    op.drop_index(op.f('ix_financial_explainers_lead_id'), table_name='financial_explainers')
    op.drop_index(op.f('ix_financial_explainers_is_accessed'), table_name='financial_explainers')
    op.drop_index(op.f('ix_financial_explainers_id'), table_name='financial_explainers')
    op.drop_table('financial_explainers')
    op.drop_index(op.f('ix_ai_interactions_success'), table_name='ai_interactions')
    op.drop_index(op.f('ix_ai_interactions_lead_id'), table_name='ai_interactions')
    op.drop_index(op.f('ix_ai_interactions_interaction_type'), table_name='ai_interactions')
    op.drop_index(op.f('ix_ai_interactions_id'), table_name='ai_interactions')
    op.drop_table('ai_interactions')
    op.drop_index(op.f('ix_testimonials_service_category'), table_name='testimonials')
    op.drop_index(op.f('ix_testimonials_id'), table_name='testimonials')
    op.drop_table('testimonials')
    op.drop_index(op.f('ix_offers_valid_for_service'), table_name='offers')
    op.drop_index(op.f('ix_offers_is_active'), table_name='offers')
    op.drop_index(op.f('ix_offers_id'), table_name='offers')
    op.drop_table('offers')
    op.drop_index(op.f('ix_leads_status'), table_name='leads')
    op.drop_index(op.f('ix_leads_phone'), table_name='leads')
    op.drop_index(op.f('ix_leads_name'), table_name='leads')
    op.drop_index(op.f('ix_leads_last_contact_at'), table_name='leads')
    op.drop_index(op.f('ix_leads_id'), table_name='leads')
    op.drop_index(op.f('ix_leads_email'), table_name='leads')
    op.drop_index(op.f('ix_leads_do_not_contact'), table_name='leads')
    op.drop_table('leads')
    # ### end Alembic commands ###
